package com.demo.bean.model;

import com.speedment.jpastreamer.field.ComparableField;
import com.speedment.jpastreamer.field.StringField;

import java.util.Date;

/**
 * The generated base for entity {@link User} representing entities of the
 * {@code user}-table in the database.
 * <p> This file has been automatically generated by JPAStreamer.
 * 
 * @author JPAStreamer
 */
public final class User$ {
    
    /**
     * This Field corresponds to the {@link User} field updatedBy.
     */
    public static final StringField<User> updatedBy = StringField.create(
        User.class,
        "updatedBy",
        User::getUpdatedBy,
        false
    );
    /**
     * This Field corresponds to the {@link User} field password.
     */
    public static final StringField<User> password = StringField.create(
        User.class,
        "password",
        User::getPassword,
        false
    );
    /**
     * This Field corresponds to the {@link User} field name.
     */
    public static final StringField<User> name = StringField.create(
        User.class,
        "name",
        User::getName,
        false
    );
    /**
     * This Field corresponds to the {@link User} field id.
     */
    public static final ComparableField<User, Integer> id = ComparableField.create(
        User.class,
        "id",
        User::getId,
        false
    );
    /**
     * This Field corresponds to the {@link User} field createdAt.
     */
    public static final ComparableField<User, Date> createdAt = ComparableField.create(
        User.class,
        "createdAt",
        User::getCreatedAt,
        false
    );
    /**
     * This Field corresponds to the {@link User} field createdBy.
     */
    public static final StringField<User> createdBy = StringField.create(
        User.class,
        "createdBy",
        User::getCreatedBy,
        false
    );
    /**
     * This Field corresponds to the {@link User} field updatedAt.
     */
    public static final ComparableField<User, Date> updatedAt = ComparableField.create(
        User.class,
        "updatedAt",
        User::getUpdatedAt,
        false
    );
}